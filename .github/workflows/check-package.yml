name: R Package Check

on:
  push:
    branches:
      - main
      - pipeline
  pull_request:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: my-r-package-ci
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Replace old cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Install R package dependencies
        run: |
          docker run --rm -v ${{ github.workspace }}:/workdir my-r-package-ci \
          Rscript -e 'if (!requireNamespace("devtools", quietly = TRUE)) install.packages("devtools"); devtools::install_deps("/workdir", dependencies = TRUE)'

      - name: Load package with devtools::load_all()
        run: |
          docker run --rm -v ${{ github.workspace }}:/workdir my-r-package-ci \
          Rscript -e 'devtools::load_all("/workdir")'

      - name: Check package with devtools::check()
        run: |
          docker run --rm -v ${{ github.workspace }}:/workdir my-r-package-ci \
          Rscript -e '
            check <- devtools::check("/workdir", error_on = "warning");
            if (length(check$errors) > 0 || length(check$warnings) > 0) {
              stop("There were errors or warnings during devtools::check()")
            }
          '

      - name: Calculate test coverage and save value
        id: coverage
        run: |
          mkdir -p .github/badges
          docker run --rm -v ${{ github.workspace }}:/workdir my-r-package-ci \
          Rscript -e '
            cov <- covr::package_coverage("/workdir");
            pct <- round(covr::percent_coverage(cov), 1);
            cat(pct, file="/workdir/.github/badges/coverage.txt")
          '

      - name: Create coverage badge manually
        run: |
          COVERAGE=$(cat .github/badges/coverage.txt)
          COLOR="red"
          if (( $(echo "$COVERAGE > 80" | bc -l) )); then COLOR="green"; fi
          if (( $(echo "$COVERAGE > 60" | bc -l) && $(echo "$COVERAGE <= 80" | bc -l) )); then COLOR="yellow"; fi
          echo "<svg xmlns='http://www.w3.org/2000/svg' width='120' height='20'>
            <linearGradient id='a' x2='0' y2='100%'>
              <stop offset='0' stop-color='#bbb' stop-opacity='.1'/>
              <stop offset='1' stop-opacity='.1'/>
            </linearGradient>
            <rect rx='3' width='120' height='20' fill='#555'/>
            <rect rx='3' x='60' width='60' height='20' fill='$COLOR'/>
            <path fill='$COLOR' d='M60 0h4v20h-4z'/>
            <rect rx='3' width='120' height='20' fill='url(#a)'/>
            <g fill='#fff' text-anchor='middle' font-family='Verdana' font-size='11'>
              <text x='30' y='15'>coverage</text>
              <text x='90' y='15'>$COVERAGE%</text>
            </g>
          </svg>" > .github/badges/coverage.svg

      - name: Upload coverage badge
        uses: actions/upload-artifact@v4
        with:
          name: coverage-badge
          path: .github/badges/coverage.svg

